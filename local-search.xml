<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建hexo博客</title>
    <link href="/2020/07/26/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/07/26/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>​    使用hexo搭建个人博客是一个朋友推荐的；因为可以说是完全<strong>免费</strong>，虽然我自己也有服务器，但是还是使用了这个，要问我为什么，就是搭建简单。<strong>ps : 程序员最缺的就是时间不是么</strong>  :smiley:</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li>​    下载 <a href="http://nodejs.org/" target="_blank" rel="noopener">node js</a>  </li><li>​    下载 <a href="http://git-scm.com/" target="_blank" rel="noopener">git</a>    Windows系统的 可以下载<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝镜像</a>比较快</li></ul><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><pre><code class="hljs javascript">npm install -g hexo-cli</code></pre><pre><code class="hljs javascript">hexo -v  <span class="hljs-comment">//  检验是否安装成功</span></code></pre><h3 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h3><pre><code class="hljs kotlin"><span class="hljs-comment">//  创建myblog</span>mkdir myblog<span class="hljs-comment">//  进入 博客目录</span>cd myblog <span class="hljs-comment">// 初始化</span>hexo <span class="hljs-keyword">init</span></code></pre><p><img src="D:%5C%E7%AC%94%E8%AE%B0%5C%E5%8D%9A%E5%AE%A2%5C%E7%9B%AE%E5%BD%95.png" srcset="/img/loading.gif" alt=""></p><ul><li>node_modules: 依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章  一般自己写的笔记 丢到   <strong>source/_posts/</strong>  下就好了</li><li>themes：主题      ##  这个自己找（看看自己对页面功能的需求），用的最多的是  <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next</a>    我用的是 <a href="https://hexo.fluid-dev.com/" target="_blank" rel="noopener">fluid</a></li><li>** _config.yml: 博客的配置文件**</li></ul><pre><code class="hljs undefined">hexo g  &#x2F;&#x2F;  编译hexo s  &#x2F;&#x2F;  本地启动 默认4000 端口</code></pre><h3 id="把博客配置到GitHub-，这样所有人都能访问的到"><a href="#把博客配置到GitHub-，这样所有人都能访问的到" class="headerlink" title="把博客配置到GitHub ，这样所有人都能访问的到"></a>把博客配置到GitHub ，这样所有人都能访问的到</h3><p> <strong>前提：个人必须要有一个GitHub的账号</strong></p><ol><li><p>去 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>  新建一个工程 （要求： 格式必须是 用户名.github.io     比如 name.github.io）</p><p> <img src="D:%5C%E7%AC%94%E8%AE%B0%E6%88%AA%E5%9B%BE%5C%E5%8D%9A%E5%AE%A2%5Cimage-20200726154043427.png" srcset="/img/loading.gif" alt=""></p></li></ol><pre><code>工程名必须 跟自己名称一致 加上 .Github.io  **我这里报错 的是因为之前创建了**![image-20200726154608047](D:\笔记截图\博客\image-20200726154608047.png)</code></pre><ol start="2"><li><p>然后去我们创建的博客根目录下  修改 <strong>_config.yml问价</strong>    找到 <code>deploy</code> 这个部分, 修改成</p> <pre><code class="hljs yml"><span class="hljs-attr">deploy:</span>    <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>    <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:xxx/xxx.github.io.git</span>  <span class="hljs-comment">###  你在GitHub创建完工程 生成的地址</span>    <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span></code></pre></li><li><p>部署</p> <pre><code class="hljs javascript">hexo  cl  ##清理hexo  g  ## 编译   ##  每次操作完最好 执行一次，不然会发现你本地运行好好的，远程的内容跟你本地不一致npm install hexo-deployer-git --save   ## 安装git环境  hexo d  ##部署到GitHub   ##  他会让你输入GitHub的账号密码 输入一下就好了</code></pre></li></ol><p>这一步就完成了 然后试试访问一下部署的地址就好了  如：xxx.github.io  我的就是：weimao520.github.io   如果有点闲钱的话 最好自己买一个域名 配置下:smiley:</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装Redis</title>
    <link href="/2020/07/20/%E5%AE%89%E8%A3%85Redis/"/>
    <url>/2020/07/20/%E5%AE%89%E8%A3%85Redis/</url>
    
    <content type="html"><![CDATA[<h2 id="安装GCC-编译器"><a href="#安装GCC-编译器" class="headerlink" title="安装GCC 编译器"></a>安装GCC 编译器</h2><pre><code class="hljs c">yum install gcc -y</code></pre><h2 id="进入Redis目录-，执行编译"><a href="#进入Redis目录-，执行编译" class="headerlink" title="进入Redis目录 ，执行编译"></a>进入Redis目录 ，执行编译</h2><pre><code class="hljs c">cd  redis<span class="hljs-number">-5.0</span><span class="hljs-number">.4</span>    make</code></pre><h2 id="进入src-目录，执行安装命令"><a href="#进入src-目录，执行安装命令" class="headerlink" title="进入src 目录，执行安装命令"></a>进入src 目录，执行安装命令</h2><pre><code class="hljs c">cd src &amp;&amp; make install</code></pre><p>​    </p><h2 id="启动redis程序"><a href="#启动redis程序" class="headerlink" title="启动redis程序"></a>启动redis程序</h2><pre><code class="hljs c">./redis-server  ../redis.confredis-cli</code></pre><p>​    </p><h2 id="修改redis-conf配置文件"><a href="#修改redis-conf配置文件" class="headerlink" title="修改redis.conf配置文件"></a>修改redis.conf配置文件</h2><pre><code class="hljs c">bind <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>   ##允许任何地址访问 redisdaemonize yes   ##以后台进程redis    <span class="hljs-keyword">protected</span>-mode no  ## 关闭保护功能requirepass root   ##  设置访问密码</code></pre><h2 id="开启防火墙端口"><a href="#开启防火墙端口" class="headerlink" title="开启防火墙端口"></a>开启防火墙端口</h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
